#!/usr/bin/env bash

# rebuild-with-webui - Wrapper script for darwin-rebuild that handles open-webui updates
# Simplified for studio.nix configuration

set -euo pipefail

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

print_header() {
    echo -e "${BLUE}=== $1 ===${NC}"
}

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

print_header "Nix-darwin rebuild with open-webui management"

# Step 1: Run darwin-rebuild for studio
print_status "Step 1: Running darwin-rebuild switch --flake '.#studio'..."
if sudo darwin-rebuild switch --flake ".#studio"; then
    print_status "‚úÖ Nix-darwin rebuild completed successfully"
else
    print_error "‚ùå Nix-darwin rebuild failed"
    exit 1
fi

# Step 2: Update open-webui if needed
print_status "Step 2: Checking open-webui updates..."
"$SCRIPT_DIR/open-webui-update-hook"

# Step 3: Show final status
print_header "Final Status"
print_status "‚úÖ System rebuild completed"
print_status "‚úÖ open-webui updated if needed"

# Check if services are running
if launchctl list | grep -q "org.nixos.ollama"; then
    print_status "‚úÖ ollama service is running"
else
    print_status "‚ö†Ô∏è  ollama service is not running"
fi

if launchctl list | grep -q "org.nixos.open-webui"; then
    webui_status=$(launchctl list | grep "org.nixos.open-webui" | awk '{print $2}')
    if [[ "$webui_status" == "0" ]]; then
        print_status "‚úÖ open-webui service is running"
        print_status "üåê Access at: http://localhost:8080"
    else
        print_status "‚ö†Ô∏è  open-webui service is not running properly"
    fi
else
    print_status "‚ö†Ô∏è  open-webui service is not loaded"
fi

print_status "üéâ All done!"